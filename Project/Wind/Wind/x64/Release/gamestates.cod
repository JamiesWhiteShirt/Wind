; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61030.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?renderingState@GameStates@@3PEAVGameState@1@EA	; GameStates::renderingState
PUBLIC	?pendingState@GameStates@@3PEAVGameState@1@EA	; GameStates::pendingState
PUBLIC	?processedState@GameStates@@3PEAVGameState@1@EA	; GameStates::processedState
PUBLIC	?newPendingAvailable@GameStates@@3_NA		; GameStates::newPendingAvailable
?renderingState@GameStates@@3PEAVGameState@1@EA DQ 01H DUP (?) ; GameStates::renderingState
?pendingState@GameStates@@3PEAVGameState@1@EA DQ 01H DUP (?) ; GameStates::pendingState
?processedState@GameStates@@3PEAVGameState@1@EA DQ 01H DUP (?) ; GameStates::processedState
?newPendingAvailable@GameStates@@3_NA DB 01H DUP (?)	; GameStates::newPendingAvailable
_BSS	ENDS
PUBLIC	?swap@@YAXAEAPEAVGameState@GameStates@@0@Z	; swap
PUBLIC	??_GGameState@GameStates@@QEAAPEAXI@Z		; GameStates::GameState::`scalar deleting destructor'
PUBLIC	??1GameState@GameStates@@QEAA@XZ		; GameStates::GameState::~GameState
PUBLIC	??0GameState@GameStates@@QEAA@XZ		; GameStates::GameState::GameState
PUBLIC	??0Camera@GameStates@@QEAA@XZ			; GameStates::Camera::Camera
PUBLIC	?cleanup@GameStates@@YAXXZ			; GameStates::cleanup
PUBLIC	?swapProcessedPending@GameStates@@YAXXZ		; GameStates::swapProcessedPending
PUBLIC	?staticInit@GameStates@@YAXXZ			; GameStates::staticInit
PUBLIC	?swapPendingRendering@GameStates@@YAXXZ		; GameStates::swapPendingRendering
PUBLIC	?mut@GameStates@@3Vmutex@std@@A			; GameStates::mut
	ALIGN	4

_Tuple_alloc DB	01H DUP (?)
	ALIGN	4

ignore	DB	01H DUP (?)
	ALIGN	4

allocator_arg DB 01H DUP (?)
	ALIGN	4

piecewise_construct DB 01H DUP (?)
	ALIGN	8

?mut@GameStates@@3Vmutex@std@@A DQ 01H DUP (?)		; GameStates::mut
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GGameState@GameStates@@QEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+23
	DD	imagerel $unwind$??_GGameState@GameStates@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Emut@GameStates@@YAXXZ DD imagerel ??__Emut@GameStates@@YAXXZ
	DD	imagerel ??__Emut@GameStates@@YAXXZ+48
	DD	imagerel $unwind$??__Emut@GameStates@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cleanup@GameStates@@YAXXZ DD imagerel $LN25
	DD	imagerel $LN25+64
	DD	imagerel $unwind$?cleanup@GameStates@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swapProcessedPending@GameStates@@YAXXZ DD imagerel $LN20
	DD	imagerel $LN20+195
	DD	imagerel $unwind$?swapProcessedPending@GameStates@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?staticInit@GameStates@@YAXXZ DD imagerel $LN37
	DD	imagerel $LN37+215
	DD	imagerel $unwind$?staticInit@GameStates@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swapPendingRendering@GameStates@@YAXXZ DD imagerel $LN21
	DD	imagerel $LN21+208
	DD	imagerel $unwind$?swapPendingRendering@GameStates@@YAXXZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swapPendingRendering@GameStates@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?staticInit@GameStates@@YAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swapProcessedPending@GameStates@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cleanup@GameStates@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Emut@GameStates@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GGameState@GameStates@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
mut$initializer$ DQ FLAT:??__Emut@GameStates@@YAXXZ
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ?swapPendingRendering@GameStates@@YAXXZ
_TEXT	SEGMENT
?swapPendingRendering@GameStates@@YAXXZ PROC		; GameStates::swapPendingRendering, COMDAT

; 66   : {

$LN21:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 68   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?mut@GameStates@@3Vmutex@std@@A ; GameStates::mut
  0000b	e8 00 00 00 00	 call	 _Mtx_lock

; 32   : 	if (_Res != _Thrd_success)

  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN8@swapPendin

; 33   : 		_Throw_C_error(_Res);

  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN8@swapPendin:
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 68   : 	if(newPendingAvailable)

  0001b	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?newPendingAvailable@GameStates@@3_NA, 0 ; GameStates::newPendingAvailable
  00022	0f 84 88 00 00
	00		 je	 $LN1@swapPendin

; 49   : 	gs1->cam = gs2->cam;

  00028	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState
  0002f	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA ; GameStates::renderingState

; 69   : 	{
; 70   : 		swap(renderingState, pendingState);
; 71   : 		newPendingAvailable = false;

  00036	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?newPendingAvailable@GameStates@@3_NA, 0 ; GameStates::newPendingAvailable

; 49   : 	gs1->cam = gs2->cam;

  0003d	8b 01		 mov	 eax, DWORD PTR [rcx]
  0003f	89 02		 mov	 DWORD PTR [rdx], eax
  00041	8b 41 04	 mov	 eax, DWORD PTR [rcx+4]
  00044	89 42 04	 mov	 DWORD PTR [rdx+4], eax
  00047	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  0004a	89 42 08	 mov	 DWORD PTR [rdx+8], eax
  0004d	8b 41 0c	 mov	 eax, DWORD PTR [rcx+12]
  00050	89 42 0c	 mov	 DWORD PTR [rdx+12], eax
  00053	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]
  00056	89 42 10	 mov	 DWORD PTR [rdx+16], eax
  00059	8b 41 14	 mov	 eax, DWORD PTR [rcx+20]
  0005c	89 42 14	 mov	 DWORD PTR [rdx+20], eax
  0005f	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]
  00062	89 42 18	 mov	 DWORD PTR [rdx+24], eax
  00065	8b 41 1c	 mov	 eax, DWORD PTR [rcx+28]
  00068	89 42 1c	 mov	 DWORD PTR [rdx+28], eax

; 50   : 	gs1->FOV = gs2->FOV;

  0006b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState
  00072	8b 50 20	 mov	 edx, DWORD PTR [rax+32]
  00075	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA ; GameStates::renderingState
  0007c	89 50 20	 mov	 DWORD PTR [rax+32], edx

; 51   : 	gs1->devEnabled = gs2->devEnabled;

  0007f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState
  00086	0f b6 50 24	 movzx	 edx, BYTE PTR [rax+36]
  0008a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA ; GameStates::renderingState
  00091	88 50 24	 mov	 BYTE PTR [rax+36], dl

; 52   : 	GameState* temp = gs2;

  00094	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState

; 53   : 	gs2 = gs1;

  0009b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA ; GameStates::renderingState
  000a2	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA, rax ; GameStates::pendingState

; 54   : 	gs1 = temp;

  000a9	48 89 15 00 00
	00 00		 mov	 QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA, rdx ; GameStates::renderingState
$LN1@swapPendin:
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 83   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  000b0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?mut@GameStates@@3Vmutex@std@@A ; GameStates::mut
  000b7	e8 00 00 00 00	 call	 _Mtx_unlock

; 32   : 	if (_Res != _Thrd_success)

  000bc	85 c0		 test	 eax, eax
  000be	74 0b		 je	 SHORT $LN17@swapPendin

; 33   : 		_Throw_C_error(_Res);

  000c0	8b c8		 mov	 ecx, eax
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 74   : }

  000c2	48 83 c4 28	 add	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 33   : 		_Throw_C_error(_Res);

  000c6	e9 00 00 00 00	 jmp	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN17@swapPendin:
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

  000cb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cf	c3		 ret	 0
?swapPendingRendering@GameStates@@YAXXZ ENDP		; GameStates::swapPendingRendering
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ?staticInit@GameStates@@YAXXZ
_TEXT	SEGMENT
?staticInit@GameStates@@YAXXZ PROC			; GameStates::staticInit, COMDAT

; 34   : {

$LN37:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 35   : 	GameStates::processedState = new GameState();

  00006	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0000b	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp

; 16   : {

  00010	33 db		 xor	 ebx, ebx
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 35   : 	GameStates::processedState = new GameState();

  00012	48 85 c0	 test	 rax, rax
  00015	74 22		 je	 SHORT $LN3@staticInit
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp

; 16   : {

  00017	48 89 18	 mov	 QWORD PTR [rax], rbx
  0001a	89 58 08	 mov	 DWORD PTR [rax+8], ebx
  0001d	48 c7 40 0c 00
	00 80 3f	 mov	 QWORD PTR [rax+12], 1065353216 ; 3f800000H
  00025	48 89 58 14	 mov	 QWORD PTR [rax+20], rbx
  00029	c7 40 1c 00 00
	80 3f		 mov	 DWORD PTR [rax+28], 1065353216 ; 3f800000H
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 18   : {

  00030	c7 40 20 5a 00
	00 00		 mov	 DWORD PTR [rax+32], 90	; 0000005aH

; 35   : 	GameStates::processedState = new GameState();

  00037	eb 03		 jmp	 SHORT $LN4@staticInit
$LN3@staticInit:
  00039	48 8b c3	 mov	 rax, rbx
$LN4@staticInit:

; 36   : 	GameStates::pendingState = new GameState();

  0003c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00041	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?processedState@GameStates@@3PEAVGameState@1@EA, rax ; GameStates::processedState
  00048	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0004d	48 85 c0	 test	 rax, rax
  00050	74 2a		 je	 SHORT $LN5@staticInit
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp

; 16   : {

  00052	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00059	89 58 08	 mov	 DWORD PTR [rax+8], ebx
  0005c	48 c7 40 0c 00
	00 80 3f	 mov	 QWORD PTR [rax+12], 1065353216 ; 3f800000H
  00064	48 c7 40 14 00
	00 00 00	 mov	 QWORD PTR [rax+20], 0
  0006c	c7 40 1c 00 00
	80 3f		 mov	 DWORD PTR [rax+28], 1065353216 ; 3f800000H
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 18   : {

  00073	c7 40 20 5a 00
	00 00		 mov	 DWORD PTR [rax+32], 90	; 0000005aH

; 36   : 	GameStates::pendingState = new GameState();

  0007a	eb 03		 jmp	 SHORT $LN6@staticInit
$LN5@staticInit:
  0007c	48 8b c3	 mov	 rax, rbx
$LN6@staticInit:

; 37   : 	GameStates::renderingState = new GameState();

  0007f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00084	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA, rax ; GameStates::pendingState
  0008b	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00090	48 85 c0	 test	 rax, rax
  00093	74 35		 je	 SHORT $LN7@staticInit
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp

; 16   : {

  00095	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0009c	89 58 08	 mov	 DWORD PTR [rax+8], ebx
  0009f	48 c7 40 0c 00
	00 80 3f	 mov	 QWORD PTR [rax+12], 1065353216 ; 3f800000H
  000a7	48 c7 40 14 00
	00 00 00	 mov	 QWORD PTR [rax+20], 0
  000af	c7 40 1c 00 00
	80 3f		 mov	 DWORD PTR [rax+28], 1065353216 ; 3f800000H
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 18   : {

  000b6	c7 40 20 5a 00
	00 00		 mov	 DWORD PTR [rax+32], 90	; 0000005aH

; 37   : 	GameStates::renderingState = new GameState();

  000bd	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA, rax ; GameStates::renderingState

; 38   : }

  000c4	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c8	5b		 pop	 rbx
  000c9	c3		 ret	 0
$LN7@staticInit:

; 37   : 	GameStates::renderingState = new GameState();

  000ca	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA, rbx ; GameStates::renderingState

; 38   : }

  000d1	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d5	5b		 pop	 rbx
  000d6	c3		 ret	 0
?staticInit@GameStates@@YAXXZ ENDP			; GameStates::staticInit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ?swapProcessedPending@GameStates@@YAXXZ
_TEXT	SEGMENT
?swapProcessedPending@GameStates@@YAXXZ PROC		; GameStates::swapProcessedPending, COMDAT

; 58   : {

$LN20:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 68   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?mut@GameStates@@3Vmutex@std@@A ; GameStates::mut
  0000b	e8 00 00 00 00	 call	 _Mtx_lock

; 32   : 	if (_Res != _Thrd_success)

  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN7@swapProces

; 33   : 		_Throw_C_error(_Res);

  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN7@swapProces:
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 49   : 	gs1->cam = gs2->cam;

  0001b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?processedState@GameStates@@3PEAVGameState@1@EA ; GameStates::processedState
  00022	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState

; 59   : 	mut.lock();
; 60   : 	swap(pendingState, processedState);
; 61   : 	newPendingAvailable = true;

  00029	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?newPendingAvailable@GameStates@@3_NA, 1 ; GameStates::newPendingAvailable

; 49   : 	gs1->cam = gs2->cam;

  00030	8b 01		 mov	 eax, DWORD PTR [rcx]
  00032	89 02		 mov	 DWORD PTR [rdx], eax
  00034	8b 41 04	 mov	 eax, DWORD PTR [rcx+4]
  00037	89 42 04	 mov	 DWORD PTR [rdx+4], eax
  0003a	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  0003d	89 42 08	 mov	 DWORD PTR [rdx+8], eax
  00040	8b 41 0c	 mov	 eax, DWORD PTR [rcx+12]
  00043	89 42 0c	 mov	 DWORD PTR [rdx+12], eax
  00046	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]
  00049	89 42 10	 mov	 DWORD PTR [rdx+16], eax
  0004c	8b 41 14	 mov	 eax, DWORD PTR [rcx+20]
  0004f	89 42 14	 mov	 DWORD PTR [rdx+20], eax
  00052	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]
  00055	89 42 18	 mov	 DWORD PTR [rdx+24], eax
  00058	8b 41 1c	 mov	 eax, DWORD PTR [rcx+28]
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 83   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?mut@GameStates@@3Vmutex@std@@A ; GameStates::mut
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 49   : 	gs1->cam = gs2->cam;

  00062	89 42 1c	 mov	 DWORD PTR [rdx+28], eax

; 50   : 	gs1->FOV = gs2->FOV;

  00065	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?processedState@GameStates@@3PEAVGameState@1@EA ; GameStates::processedState
  0006c	8b 50 20	 mov	 edx, DWORD PTR [rax+32]
  0006f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState
  00076	89 50 20	 mov	 DWORD PTR [rax+32], edx

; 51   : 	gs1->devEnabled = gs2->devEnabled;

  00079	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?processedState@GameStates@@3PEAVGameState@1@EA ; GameStates::processedState
  00080	0f b6 50 24	 movzx	 edx, BYTE PTR [rax+36]
  00084	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState
  0008b	88 50 24	 mov	 BYTE PTR [rax+36], dl

; 52   : 	GameState* temp = gs2;

  0008e	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR ?processedState@GameStates@@3PEAVGameState@1@EA ; GameStates::processedState

; 53   : 	gs2 = gs1;

  00095	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState
  0009c	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?processedState@GameStates@@3PEAVGameState@1@EA, rax ; GameStates::processedState

; 54   : 	gs1 = temp;

  000a3	48 89 15 00 00
	00 00		 mov	 QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA, rdx ; GameStates::pendingState
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 83   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  000aa	e8 00 00 00 00	 call	 _Mtx_unlock

; 32   : 	if (_Res != _Thrd_success)

  000af	85 c0		 test	 eax, eax
  000b1	74 0b		 je	 SHORT $LN16@swapProces

; 33   : 		_Throw_C_error(_Res);

  000b3	8b c8		 mov	 ecx, eax
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 63   : }

  000b5	48 83 c4 28	 add	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 33   : 		_Throw_C_error(_Res);

  000b9	e9 00 00 00 00	 jmp	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN16@swapProces:
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 63   : }

  000be	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c2	c3		 ret	 0
?swapProcessedPending@GameStates@@YAXXZ ENDP		; GameStates::swapProcessedPending
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ?cleanup@GameStates@@YAXXZ
_TEXT	SEGMENT
?cleanup@GameStates@@YAXXZ PROC				; GameStates::cleanup, COMDAT

; 41   : {

$LN25:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 42   : 	delete GameStates::renderingState;

  00004	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?renderingState@GameStates@@3PEAVGameState@1@EA ; GameStates::renderingState
  0000b	48 85 c9	 test	 rcx, rcx
  0000e	74 05		 je	 SHORT $LN9@cleanup
  00010	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN9@cleanup:

; 43   : 	delete GameStates::processedState;

  00015	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?processedState@GameStates@@3PEAVGameState@1@EA ; GameStates::processedState
  0001c	48 85 c9	 test	 rcx, rcx
  0001f	74 05		 je	 SHORT $LN14@cleanup
  00021	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN14@cleanup:

; 44   : 	delete GameStates::pendingState;

  00026	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?pendingState@GameStates@@3PEAVGameState@1@EA ; GameStates::pendingState
  0002d	48 85 c9	 test	 rcx, rcx
  00030	74 09		 je	 SHORT $LN19@cleanup

; 45   : }

  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN19@cleanup:
  0003b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003f	c3		 ret	 0
?cleanup@GameStates@@YAXXZ ENDP				; GameStates::cleanup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ??0Camera@GameStates@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Camera@GameStates@@QEAA@XZ PROC			; GameStates::Camera::Camera, COMDAT
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp

; 16   : {

  00000	33 c0		 xor	 eax, eax
  00002	48 c7 41 0c 00
	00 80 3f	 mov	 QWORD PTR [rcx+12], 1065353216 ; 3f800000H
  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000d	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  00010	48 89 41 14	 mov	 QWORD PTR [rcx+20], rax
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 12   : }

  00014	48 8b c1	 mov	 rax, rcx
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp

; 16   : {

  00017	c7 41 1c 00 00
	80 3f		 mov	 DWORD PTR [rcx+28], 1065353216 ; 3f800000H
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 12   : }

  0001e	c3		 ret	 0
??0Camera@GameStates@@QEAA@XZ ENDP			; GameStates::Camera::Camera
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ??0GameState@GameStates@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0GameState@GameStates@@QEAA@XZ PROC			; GameStates::GameState::GameState, COMDAT
; File c:\users\erlend\documents\github\wind\project\wind\wind\geometry.cpp

; 16   : {

  00000	33 c0		 xor	 eax, eax
  00002	48 c7 41 0c 00
	00 80 3f	 mov	 QWORD PTR [rcx+12], 1065353216 ; 3f800000H
  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000d	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  00010	48 89 41 14	 mov	 QWORD PTR [rcx+20], rax
  00014	c7 41 1c 00 00
	80 3f		 mov	 DWORD PTR [rcx+28], 1065353216 ; 3f800000H
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 20   : }

  0001b	48 8b c1	 mov	 rax, rcx
  0001e	c7 41 20 5a 00
	00 00		 mov	 DWORD PTR [rcx+32], 90	; 0000005aH
  00025	c3		 ret	 0
??0GameState@GameStates@@QEAA@XZ ENDP			; GameStates::GameState::GameState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ??1GameState@GameStates@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1GameState@GameStates@@QEAA@XZ PROC			; GameStates::GameState::~GameState, COMDAT

; 24   : 	//clean();
; 25   : }

  00000	c2 00 00	 ret	 0
??1GameState@GameStates@@QEAA@XZ ENDP			; GameStates::GameState::~GameState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ??__Emut@GameStates@@YAXXZ
text$yc	SEGMENT
??__Emut@GameStates@@YAXXZ PROC				; GameStates::`dynamic initializer for 'mut'', COMDAT

; 27   : std::mutex GameStates::mut;

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 63   : 	return (_Check_C_return(_Mtx_init(_Mtx, _Type)));

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?mut@GameStates@@3Vmutex@std@@A ; GameStates::mut
  0000b	ba 02 00 00 00	 mov	 edx, 2
  00010	e8 00 00 00 00	 call	 _Mtx_init

; 32   : 	if (_Res != _Thrd_success)

  00015	85 c0		 test	 eax, eax
  00017	74 07		 je	 SHORT $LN9@dynamic

; 33   : 		_Throw_C_error(_Res);

  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN9@dynamic:
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp

; 27   : std::mutex GameStates::mut;

  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__Fmut@GameStates@@YAXXZ ; GameStates::`dynamic atexit destructor for 'mut''
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	e9 00 00 00 00	 jmp	 atexit
??__Emut@GameStates@@YAXXZ ENDP				; GameStates::`dynamic initializer for 'mut''
text$yc	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\mutex
;	COMDAT ??__Fmut@GameStates@@YAXXZ
text$yd	SEGMENT
??__Fmut@GameStates@@YAXXZ PROC				; GameStates::`dynamic atexit destructor for 'mut'', COMDAT

; 33   : 		_Mtx_destroy(&_Mtx);

  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?mut@GameStates@@3Vmutex@std@@A ; GameStates::mut
  00007	e9 00 00 00 00	 jmp	 _Mtx_destroy
??__Fmut@GameStates@@YAXXZ ENDP				; GameStates::`dynamic atexit destructor for 'mut''
text$yd	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GGameState@GameStates@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GGameState@GameStates@@QEAAPEAXI@Z PROC		; GameStates::GameState::`scalar deleting destructor', COMDAT
$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  0000e	48 8b c3	 mov	 rax, rbx
  00011	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00015	5b		 pop	 rbx
  00016	c3		 ret	 0
??_GGameState@GameStates@@QEAAPEAXI@Z ENDP		; GameStates::GameState::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\gamestates.cpp
;	COMDAT ?swap@@YAXAEAPEAVGameState@GameStates@@0@Z
_TEXT	SEGMENT
gs1$ = 8
gs2$ = 16
?swap@@YAXAEAPEAVGameState@GameStates@@0@Z PROC		; swap, COMDAT

; 49   : 	gs1->cam = gs2->cam;

  00000	4c 8b 02	 mov	 r8, QWORD PTR [rdx]
  00003	4c 8b 09	 mov	 r9, QWORD PTR [rcx]
  00006	4c 8b d1	 mov	 r10, rcx
  00009	41 8b 00	 mov	 eax, DWORD PTR [r8]
  0000c	41 89 01	 mov	 DWORD PTR [r9], eax
  0000f	41 8b 40 04	 mov	 eax, DWORD PTR [r8+4]
  00013	41 89 41 04	 mov	 DWORD PTR [r9+4], eax
  00017	41 8b 40 08	 mov	 eax, DWORD PTR [r8+8]
  0001b	41 89 41 08	 mov	 DWORD PTR [r9+8], eax
  0001f	41 8b 40 0c	 mov	 eax, DWORD PTR [r8+12]
  00023	41 89 41 0c	 mov	 DWORD PTR [r9+12], eax
  00027	41 8b 40 10	 mov	 eax, DWORD PTR [r8+16]
  0002b	41 89 41 10	 mov	 DWORD PTR [r9+16], eax
  0002f	41 8b 40 14	 mov	 eax, DWORD PTR [r8+20]
  00033	41 89 41 14	 mov	 DWORD PTR [r9+20], eax
  00037	41 8b 40 18	 mov	 eax, DWORD PTR [r8+24]
  0003b	41 89 41 18	 mov	 DWORD PTR [r9+24], eax
  0003f	41 8b 40 1c	 mov	 eax, DWORD PTR [r8+28]
  00043	41 89 41 1c	 mov	 DWORD PTR [r9+28], eax

; 50   : 	gs1->FOV = gs2->FOV;

  00047	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	8b 40 20	 mov	 eax, DWORD PTR [rax+32]
  00050	89 41 20	 mov	 DWORD PTR [rcx+32], eax

; 51   : 	gs1->devEnabled = gs2->devEnabled;

  00053	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00056	49 8b 0a	 mov	 rcx, QWORD PTR [r10]
  00059	0f b6 40 24	 movzx	 eax, BYTE PTR [rax+36]
  0005d	88 41 24	 mov	 BYTE PTR [rcx+36], al

; 52   : 	GameState* temp = gs2;
; 53   : 	gs2 = gs1;

  00060	49 8b 02	 mov	 rax, QWORD PTR [r10]
  00063	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00066	48 89 02	 mov	 QWORD PTR [rdx], rax

; 54   : 	gs1 = temp;

  00069	49 89 0a	 mov	 QWORD PTR [r10], rcx

; 55   : }

  0006c	c3		 ret	 0
?swap@@YAXAEAPEAVGameState@GameStates@@0@Z ENDP		; swap
_TEXT	ENDS
END
