; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61030.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Complete Object Locator'
PUBLIC	??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Array'
PUBLIC	??_R0?AV_Pad@std@@@8				; std::_Pad `RTTI Type Descriptor'
PUBLIC	??_R3_Pad@std@@8				; std::_Pad::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@_Pad@std@@8			; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Pad@std@@8				; std::_Pad::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> > `RTTI Type Descriptor'
PUBLIC	??_7?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`vftable'
EXTRN	?terminate@@YAXXZ:PROC				; terminate
EXTRN	??0_Pad@std@@QEAA@XZ:PROC			; std::_Pad::_Pad
EXTRN	??1_Pad@std@@QEAA@XZ:PROC			; std::_Pad::~_Pad
EXTRN	?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z:PROC ; std::_Pad::_Launch
EXTRN	?_Release@_Pad@std@@QEAAXXZ:PROC		; std::_Pad::_Release
;	COMDAT ??_7?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@
CONST	SEGMENT
??_7?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ DQ FLAT:??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`vftable'
	DQ	FLAT:?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ
CONST	ENDS
;	COMDAT ??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U'
	DB	'12@U12@U12@U12@@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R2_Pad@std@@8
rdata$r	SEGMENT
??_R2_Pad@std@@8 DD imagerel ??_R1A@?0A@EA@_Pad@std@@8	; std::_Pad::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 DD 00H ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Pad@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Pad@std@@8 DD imagerel ??_R0?AV_Pad@std@@@8 ; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 DD imagerel ??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Pad@std@@8
rdata$r	SEGMENT
??_R3_Pad@std@@8 DD 00H					; std::_Pad::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Pad@std@@@8
_DATA	SEGMENT
??_R0?AV_Pad@std@@@8 DQ FLAT:??_7type_info@@6B@		; std::_Pad `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Pad@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Pad@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ DD 01H ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8
	DD	imagerel ??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
	DD	imagerel ??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@
PUBLIC	??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z ; std::forward<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
PUBLIC	??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAAXXZ ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::operator()
PUBLIC	??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAA@$$QEAV01@@Z ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
PUBLIC	?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPEAV12@@Z ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Run
PUBLIC	?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Go
PUBLIC	??$forward@P6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z	; std::forward<void (__cdecl*)(void)>
PUBLIC	??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z ; std::forward<std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
PUBLIC	??0?$List@PEAVTask@Tasks@@$0BAA@@@QEAA@XZ	; List<Tasks::Task * __ptr64,256>::List<Tasks::Task * __ptr64,256>
PUBLIC	??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ ; VirtualList<Tasks::Task,256,4098>::VirtualList<Tasks::Task,256,4098>
PUBLIC	?loop@ServerThread@@YAXXZ			; ServerThread::loop
PUBLIC	??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ ; VirtualList<Tasks::Task,256,4098>::~VirtualList<Tasks::Task,256,4098>
PUBLIC	?_Move_thread@thread@std@@AEAAAEAV12@AEAV12@@Z	; std::thread::_Move_thread
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	??4thread@std@@QEAAAEAV01@$$QEAV01@@Z		; std::thread::operator=
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	??0thread@std@@QEAA@XZ				; std::thread::thread
PUBLIC	?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ ; std::tie
PUBLIC	??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
PUBLIC	??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@XZ ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
PUBLIC	?thread@ServerThread@@3V0std@@A			; ServerThread::thread
PUBLIC	?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A ; ServerThread::taskList
_Tuple_alloc DB	01H DUP (?)
	ALIGN	4

ignore	DB	01H DUP (?)
	ALIGN	4

allocator_arg DB 01H DUP (?)
	ALIGN	4

?thread@ServerThread@@3V0std@@A DB 010H DUP (?)		; ServerThread::thread
?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A DB 0818H DUP (?) ; ServerThread::taskList
piecewise_construct DB 01H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPEAV12@@Z DD imagerel $LN16
	DD	imagerel $LN16+25
	DD	imagerel $unwind$?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ DD imagerel $LN18
	DD	imagerel $LN18+25
	DD	imagerel $unwind$?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+45
	DD	imagerel $unwind$??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EtaskList@ServerThread@@YAXXZ DD imagerel ??__EtaskList@ServerThread@@YAXXZ
	DD	imagerel ??__EtaskList@ServerThread@@YAXXZ+47
	DD	imagerel $unwind$??__EtaskList@ServerThread@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fthread@ServerThread@@YAXXZ DD imagerel ??__Fthread@ServerThread@@YAXXZ
	DD	imagerel ??__Fthread@ServerThread@@YAXXZ+24
	DD	imagerel $unwind$??__Fthread@ServerThread@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_thread@thread@std@@AEAAAEAV12@AEAV12@@Z DD imagerel $LN9
	DD	imagerel $LN9+45
	DD	imagerel $unwind$?_Move_thread@thread@std@@AEAAAEAV12@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN12
	DD	imagerel $LN12+45
	DD	imagerel $unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+21
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_thread@thread@std@@AEAAAEAV12@AEAV12@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fthread@ServerThread@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EtaskList@ServerThread@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPEAV12@@Z DD 020601H
	DD	030023206H
thread$initializer$ DQ FLAT:??__Ethread@ServerThread@@YAXXZ
taskList$initializer$ DQ FLAT:??__EtaskList@ServerThread@@YAXXZ
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tuple
;	COMDAT ??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@XZ PROC ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>, COMDAT

; 218  : 		{	// default construct
; 219  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@XZ ENDP ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tuple
;	COMDAT ??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@AEBV01@@Z PROC ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>, COMDAT

; 227  : 		{	// copy construct
; 228  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QEAA@AEBV01@@Z ENDP ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tuple
;	COMDAT ?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 8
?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ PROC ; std::tie, COMDAT

; 725  : _VARIADIC_EXPAND_0X(_TUPLE_TIE, , , , )

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ ENDP ; std::tie
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??0thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0thread@std@@QEAA@XZ PROC				; std::thread::thread, COMDAT

; 38   : 		{	// construct with no thread
; 39   : 		_Thr_set_null(_Thr);

  00000	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [rcx+8], 0

; 40   : 		}

  00007	48 8b c1	 mov	 rax, rcx
  0000a	c3		 ret	 0
??0thread@std@@QEAA@XZ ENDP				; std::thread::thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 56   : 		{	// clean up

$LN9:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 60   : 
; 61   : 	thread(thread&& _Other) _NOEXCEPT
; 62   : 		: _Thr(_Other._Thr)
; 63   : 		{	// move from _Other
; 64   : 		_Thr_set_null(_Other._Thr);
; 65   : 		}
; 66   : 
; 67   : 	thread& operator=(thread&& _Other) _NOEXCEPT
; 68   : 		{	// move from _Other
; 69   : 		return (_Move_thread(_Other));
; 70   : 		}
; 71   : 
; 72   : private:
; 73   : 	thread(const thread&);	// not defined
; 74   : 	thread& operator=(const thread&);	// not defined
; 75   : public:
; 76   : 	void swap(thread& _Other) _NOEXCEPT
; 77   : 		{	// swap with _Other
; 78   : 		_STD swap(_Thr, _Other._Thr);
; 79   : 		}
; 80   : 
; 81   : 	bool joinable() const _NOEXCEPT
; 82   : 		{	// return true if this thread can be joined
; 83   : 		return (!_Thr_is_null(_Thr));

  00004	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0

; 57   : 		if (joinable())

  00008	75 05		 jne	 SHORT $LN7@thread

; 59   : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN7@thread:

; 58   : 			_XSTD terminate();

  0000f	e8 00 00 00 00	 call	 ?terminate@@YAXXZ	; terminate
  00014	cc		 int	 3
$LN6@thread:
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z PROC		; std::thread::operator=, COMDAT

; 68   : 		{	// move from _Other

$LN12:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 71   : 
; 72   : private:
; 73   : 	thread(const thread&);	// not defined
; 74   : 	thread& operator=(const thread&);	// not defined
; 75   : public:
; 76   : 	void swap(thread& _Other) _NOEXCEPT
; 77   : 		{	// swap with _Other
; 78   : 		_STD swap(_Thr, _Other._Thr);
; 79   : 		}
; 80   : 
; 81   : 	bool joinable() const _NOEXCEPT
; 82   : 		{	// return true if this thread can be joined
; 83   : 		return (!_Thr_is_null(_Thr));

  00004	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0

; 84   : 		}
; 85   : 
; 86   : 	void join();
; 87   : 
; 88   : 	void detach()
; 89   : 		{	// detach thread
; 90   : 		if (!joinable())
; 91   : 			_Throw_Cpp_error(_INVALID_ARGUMENT);
; 92   : 		_Thrd_detachX(_Thr);
; 93   : 		_Thr_set_null(_Thr);
; 94   : 		}
; 95   : 
; 96   : 	id get_id() const _NOEXCEPT;
; 97   : 
; 98   : 	static unsigned int hardware_concurrency() _NOEXCEPT
; 99   : 		{	// return number of hardware thread contexts
; 100  : 		return (::Concurrency::details::_GetConcurrency());
; 101  : 		}
; 102  : 
; 103  : 	native_handle_type native_handle()
; 104  : 		{	// return Win32 HANDLE as void *
; 105  : 		return (_Thr._Hnd);
; 106  : 		}
; 107  : 
; 108  : private:
; 109  : 	thread& _Move_thread(thread& _Other)
; 110  : 		{	// move from _Other
; 111  : 		if (joinable())

  00008	75 1d		 jne	 SHORT $LN10@operator

; 113  : 		_Thr = _Other._Thr;

  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 89 01	 mov	 QWORD PTR [rcx], rax
  00010	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00014	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 114  : 		_Thr_set_null(_Other._Thr);

  00018	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [rdx+8], 0

; 69   : 		return (_Move_thread(_Other));

  0001f	48 8b c1	 mov	 rax, rcx

; 70   : 		}

  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
$LN10@operator:

; 112  : 			_XSTD terminate();

  00027	e8 00 00 00 00	 call	 ?terminate@@YAXXZ	; terminate
  0002c	cc		 int	 3
$LN9@operator:
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z ENDP		; std::thread::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 83   : 		return (!_Thr_is_null(_Thr));

  00000	33 c0		 xor	 eax, eax
  00002	39 41 08	 cmp	 DWORD PTR [rcx+8], eax
  00005	0f 95 c0	 setne	 al

; 84   : 		}

  00008	c3		 ret	 0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ?_Move_thread@thread@std@@AEAAAEAV12@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?_Move_thread@thread@std@@AEAAAEAV12@AEAV12@@Z PROC	; std::thread::_Move_thread, COMDAT

; 110  : 		{	// move from _Other

$LN9:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 83   : 		return (!_Thr_is_null(_Thr));

  00004	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0

; 111  : 		if (joinable())

  00008	75 1d		 jne	 SHORT $LN7@Move_threa

; 113  : 		_Thr = _Other._Thr;

  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 89 01	 mov	 QWORD PTR [rcx], rax
  00010	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00014	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 114  : 		_Thr_set_null(_Other._Thr);

  00018	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [rdx+8], 0

; 115  : 		return (*this);

  0001f	48 8b c1	 mov	 rax, rcx

; 116  : 		}

  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
$LN7@Move_threa:

; 112  : 			_XSTD terminate();

  00027	e8 00 00 00 00	 call	 ?terminate@@YAXXZ	; terminate
  0002c	cc		 int	 3
$LN6@Move_threa:
?_Move_thread@thread@std@@AEAAAEAV12@AEAV12@@Z ENDP	; std::thread::_Move_thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\serverthread.cpp
;	COMDAT ??__Ethread@ServerThread@@YAXXZ
text$yc	SEGMENT
??__Ethread@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic initializer for 'thread'', COMDAT

; 5    : std::thread ServerThread::thread;

  00000	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__Fthread@ServerThread@@YAXXZ ; ServerThread::`dynamic atexit destructor for 'thread''
  00007	e9 00 00 00 00	 jmp	 atexit
??__Ethread@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic initializer for 'thread''
text$yc	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??__Fthread@ServerThread@@YAXXZ
text$yd	SEGMENT
??__Fthread@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic atexit destructor for 'thread'', COMDAT
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 83   : 		return (!_Thr_is_null(_Thr));

  00004	83 3d 08 00 00
	00 00		 cmp	 DWORD PTR ?thread@ServerThread@@3V0std@@A+8, 0

; 57   : 		if (joinable())

  0000b	75 05		 jne	 SHORT $LN10@dynamic
  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00011	c3		 ret	 0
$LN10@dynamic:

; 58   : 			_XSTD terminate();

  00012	e8 00 00 00 00	 call	 ?terminate@@YAXXZ	; terminate
  00017	cc		 int	 3
$LN9@dynamic:
??__Fthread@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic atexit destructor for 'thread''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\serverthread.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\serverthread.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\serverthread.cpp
;	COMDAT ??__EtaskList@ServerThread@@YAXXZ
text$yc	SEGMENT
??__EtaskList@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic initializer for 'taskList'', COMDAT

; 6    : VirtualList<Tasks::Task, 256, 4098> ServerThread::taskList;

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp

; 7    : {

  00004	b9 02 10 00 00	 mov	 ecx, 4098		; 00001002H
  00009	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
; File c:\users\erlend\documents\github\wind\project\wind\wind\serverthread.cpp

; 6    : VirtualList<Tasks::Task, 256, 4098> ServerThread::taskList;

  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__FtaskList@ServerThread@@YAXXZ ; ServerThread::`dynamic atexit destructor for 'taskList''
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp

; 7    : {

  00015	c7 05 10 08 00
	00 02 10 00 00	 mov	 DWORD PTR ?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A+2064, 4098 ; 00001002H
  0001f	48 89 05 08 08
	00 00		 mov	 QWORD PTR ?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A+2056, rax
; File c:\users\erlend\documents\github\wind\project\wind\wind\serverthread.cpp

; 6    : VirtualList<Tasks::Task, 256, 4098> ServerThread::taskList;

  00026	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002a	e9 00 00 00 00	 jmp	 atexit
??__EtaskList@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic initializer for 'taskList''
text$yc	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp
;	COMDAT ??__FtaskList@ServerThread@@YAXXZ
text$yd	SEGMENT
??__FtaskList@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic atexit destructor for 'taskList'', COMDAT

; 13   : 	delete[] heap;

  00000	48 8b 0d 08 08
	00 00		 mov	 rcx, QWORD PTR ?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A+2056
  00007	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
??__FtaskList@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic atexit destructor for 'taskList''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp
;	COMDAT ??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ PROC ; VirtualList<Tasks::Task,256,4098>::~VirtualList<Tasks::Task,256,4098>, COMDAT

; 13   : 	delete[] heap;

  00000	48 8b 89 08 08
	00 00		 mov	 rcx, QWORD PTR [rcx+2056]
  00007	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ ENDP ; VirtualList<Tasks::Task,256,4098>::~VirtualList<Tasks::Task,256,4098>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\serverthread.cpp
;	COMDAT ?loop@ServerThread@@YAXXZ
_TEXT	SEGMENT
?loop@ServerThread@@YAXXZ PROC				; ServerThread::loop, COMDAT

; 14   : 	
; 15   : }

  00000	c2 00 00	 ret	 0
?loop@ServerThread@@YAXXZ ENDP				; ServerThread::loop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\list.h
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp
; File c:\users\erlend\documents\github\wind\project\wind\wind\list.h
;	COMDAT ??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ PROC ; VirtualList<Tasks::Task,256,4098>::VirtualList<Tasks::Task,256,4098>, COMDAT

; 47   : 	{

$LN9:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; File c:\users\erlend\documents\github\wind\project\wind\wind\memutil.cpp

; 7    : {

  00009	b9 02 10 00 00	 mov	 ecx, 4098		; 00001002H
  0000e	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00013	c7 83 10 08 00
	00 02 10 00 00	 mov	 DWORD PTR [rbx+2064], 4098 ; 00001002H
  0001d	48 89 83 08 08
	00 00		 mov	 QWORD PTR [rbx+2056], rax
; File c:\users\erlend\documents\github\wind\project\wind\wind\list.h

; 49   : 	}

  00024	48 8b c3	 mov	 rax, rbx
  00027	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002b	5b		 pop	 rbx
  0002c	c3		 ret	 0
??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QEAA@XZ ENDP ; VirtualList<Tasks::Task,256,4098>::VirtualList<Tasks::Task,256,4098>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\erlend\documents\github\wind\project\wind\wind\list.h
;	COMDAT ??0?$List@PEAVTask@Tasks@@$0BAA@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$List@PEAVTask@Tasks@@$0BAA@@@QEAA@XZ PROC		; List<Tasks::Task * __ptr64,256>::List<Tasks::Task * __ptr64,256>, COMDAT

; 13   : 	{
; 14   : 
; 15   : 	}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$List@PEAVTask@Tasks@@$0BAA@@@QEAA@XZ ENDP		; List<Tasks::Task * __ptr64,256>::List<Tasks::Task * __ptr64,256>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z PROC ; std::forward<std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >, COMDAT

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1777 : 	}

  00003	c3		 ret	 0
??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z ENDP ; std::forward<std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@P6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@P6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z PROC	; std::forward<void (__cdecl*)(void)>, COMDAT

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1777 : 	}

  00003	c3		 ret	 0
??$forward@P6AXXZ@std@@YA$$QEAP6AXXZAEAP6AXXZ@Z ENDP	; std::forward<void (__cdecl*)(void)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
;	COMDAT ?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ
_TEXT	SEGMENT
this$ = 48
?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ PROC ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Go, COMDAT

; 186  : 		{	// run the thread function object

$LN18:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00006	48 8b 59 20	 mov	 rbx, QWORD PTR [rcx+32]
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 194  : 		_Ln->_Release();

  0000a	e8 00 00 00 00	 call	 ?_Release@_Pad@std@@QEAAXXZ ; std::_Pad::_Release
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  0000f	ff d3		 call	 rbx
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 187  : 		return (_Run(this));

  00011	33 c0		 xor	 eax, eax

; 188  : 		}

  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5b		 pop	 rbx
  00018	c3		 ret	 0
?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UEAAIXZ ENDP ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Go
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
;	COMDAT ?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPEAV12@@Z
_TEXT	SEGMENT
_Ln$ = 48
?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPEAV12@@Z PROC ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Run, COMDAT

; 192  : 		{	// make local copy of function object and call it

$LN16:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00006	48 8b 59 20	 mov	 rbx, QWORD PTR [rcx+32]
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 194  : 		_Ln->_Release();

  0000a	e8 00 00 00 00	 call	 ?_Release@_Pad@std@@QEAAXXZ ; std::_Pad::_Release
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  0000f	ff d3		 call	 rbx
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 196  : 		return (0);

  00011	33 c0		 xor	 eax, eax

; 197  : 		}

  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5b		 pop	 rbx
  00018	c3		 ret	 0
?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPEAV12@@Z ENDP ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Run
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
;	COMDAT ??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>, COMDAT

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax
  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
;	COMDAT ??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAAXXZ PROC ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::operator(), COMDAT

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00000	48 ff 21	 rex_jmp QWORD PTR [rcx]
??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QEAAXXZ ENDP ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z PROC ; std::forward<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >, COMDAT

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1777 : 	}

  00003	c3		 ret	 0
??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QEAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AEAV10@@Z ENDP ; std::forward<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
_TEXT	ENDS
END
