; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

	TITLE	C:\Users\Glenn\Documents\GitHub\Wind\Project\Wind\Wind\serverthread.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Complete Object Locator'
PUBLIC	??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Array'
PUBLIC	??_R0?AV_Pad@std@@@8				; std::_Pad `RTTI Type Descriptor'
PUBLIC	??_R3_Pad@std@@8				; std::_Pad::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@_Pad@std@@8			; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Pad@std@@8				; std::_Pad::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> > `RTTI Type Descriptor'
PUBLIC	??_7?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`vftable'
EXTRN	?terminate@@YAXXZ:PROC				; terminate
EXTRN	??0_Pad@std@@QAE@XZ:PROC			; std::_Pad::_Pad
EXTRN	??1_Pad@std@@QAE@XZ:PROC			; std::_Pad::~_Pad
EXTRN	?_Launch@_Pad@std@@QAEXPAU_Thrd_imp_t@@@Z:PROC	; std::_Pad::_Launch
EXTRN	?_Release@_Pad@std@@QAEXXZ:PROC			; std::_Pad::_Release
;	COMDAT ??_7?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@
CONST	SEGMENT
??_7?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ DD FLAT:??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`vftable'
	DD	FLAT:?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UAEIXZ
CONST	ENDS
;	COMDAT ??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U'
	DB	'12@U12@U12@U12@@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R2_Pad@std@@8
rdata$r	SEGMENT
??_R2_Pad@std@@8 DD FLAT:??_R1A@?0A@EA@_Pad@std@@8	; std::_Pad::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 DD 00H ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Pad@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Pad@std@@8 DD FLAT:??_R0?AV_Pad@std@@@8	; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 DD FLAT:??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Pad@std@@8
rdata$r	SEGMENT
??_R3_Pad@std@@8 DD 00H					; std::_Pad::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Pad@std@@@8
_DATA	SEGMENT
??_R0?AV_Pad@std@@@8 DD FLAT:??_7type_info@@6B@		; std::_Pad `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Pad@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8 ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@6B@ DD 00H ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@@8
	DD	FLAT:??_R3?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@8
PUBLIC	??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z ; std::forward<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
PUBLIC	??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAEXXZ ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::operator()
PUBLIC	??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAE@$$QAV01@@Z ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
PUBLIC	?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPAV12@@Z ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Run
PUBLIC	?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UAEIXZ ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Go
PUBLIC	??$forward@P6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z	; std::forward<void (__cdecl*)(void)>
PUBLIC	??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z ; std::forward<std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
PUBLIC	??0?$List@PAVTask@Tasks@@$0BAA@@@QAE@XZ		; List<Tasks::Task *,256>::List<Tasks::Task *,256>
PUBLIC	??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ ; VirtualList<Tasks::Task,256,4098>::VirtualList<Tasks::Task,256,4098>
PUBLIC	?loop@ServerThread@@YAXXZ			; ServerThread::loop
PUBLIC	??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ ; VirtualList<Tasks::Task,256,4098>::~VirtualList<Tasks::Task,256,4098>
PUBLIC	?_Move_thread@thread@std@@AAEAAV12@AAV12@@Z	; std::thread::_Move_thread
PUBLIC	?joinable@thread@std@@QBE_NXZ			; std::thread::joinable
PUBLIC	??4thread@std@@QAEAAV01@$$QAV01@@Z		; std::thread::operator=
PUBLIC	??1thread@std@@QAE@XZ				; std::thread::~thread
PUBLIC	??0thread@std@@QAE@XZ				; std::thread::thread
PUBLIC	?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ ; std::tie
PUBLIC	??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@ABV01@@Z ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
PUBLIC	??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@XZ ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
PUBLIC	?world@ServerThread@@3VWorld@@A			; ServerThread::world
PUBLIC	?thread@ServerThread@@3V0std@@A			; ServerThread::thread
PUBLIC	?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A ; ServerThread::taskList
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

?world@ServerThread@@3VWorld@@A DB 03cH DUP (?)		; ServerThread::world
	ALIGN	8

?thread@ServerThread@@3V0std@@A DQ 01H DUP (?)		; ServerThread::thread
?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A DB 0410H DUP (?) ; ServerThread::taskList
_piecewise_construct DB 01H DUP (?)
_BSS	ENDS
	ORG $-8
_thread$initializer$ DD FLAT:??__Ethread@ServerThread@@YAXXZ
_taskList$initializer$ DD FLAT:??__EtaskList@ServerThread@@YAXXZ
_world$initializer$ DD FLAT:??__Eworld@ServerThread@@YAXXZ
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tuple
;	COMDAT ??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@XZ PROC ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>, COMDAT
; _this$ = ecx

; 218  : 		{	// default construct
; 219  : 		}

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@XZ ENDP ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tuple
;	COMDAT ??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@ABV01@@Z PROC ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>, COMDAT
; _this$ = ecx

; 227  : 		{	// copy construct
; 228  : 		}

  00000	8b c1		 mov	 eax, ecx
  00002	c2 04 00	 ret	 4
??0?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@QAE@ABV01@@Z ENDP ; std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tuple
;	COMDAT ?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ
_TEXT	SEGMENT
?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ PROC ; std::tie, COMDAT
; ___$ReturnUdt$ = ecx

; 725  : _VARIADIC_EXPAND_0X(_TUPLE_TIE, , , , )

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
?tie@std@@YA?AV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@1@XZ ENDP ; std::tie
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??0thread@std@@QAE@XZ
_TEXT	SEGMENT
??0thread@std@@QAE@XZ PROC				; std::thread::thread, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with no thread
; 39   : 		_Thr_set_null(_Thr);

  00000	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 40   : 		}

  00007	8b c1		 mov	 eax, ecx
  00009	c3		 ret	 0
??0thread@std@@QAE@XZ ENDP				; std::thread::thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??1thread@std@@QAE@XZ
_TEXT	SEGMENT
??1thread@std@@QAE@XZ PROC				; std::thread::~thread, COMDAT
; _this$ = ecx

; 60   : 
; 61   : 	thread(thread&& _Other) _NOEXCEPT
; 62   : 		: _Thr(_Other._Thr)
; 63   : 		{	// move from _Other
; 64   : 		_Thr_set_null(_Other._Thr);
; 65   : 		}
; 66   : 
; 67   : 	thread& operator=(thread&& _Other) _NOEXCEPT
; 68   : 		{	// move from _Other
; 69   : 		return (_Move_thread(_Other));
; 70   : 		}
; 71   : 
; 72   : private:
; 73   : 	thread(const thread&);	// not defined
; 74   : 	thread& operator=(const thread&);	// not defined
; 75   : public:
; 76   : 	void swap(thread& _Other) _NOEXCEPT
; 77   : 		{	// swap with _Other
; 78   : 		_STD swap(_Thr, _Other._Thr);
; 79   : 		}
; 80   : 
; 81   : 	bool joinable() const _NOEXCEPT
; 82   : 		{	// return true if this thread can be joined
; 83   : 		return (!_Thr_is_null(_Thr));

  00000	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0

; 57   : 		if (joinable())

  00004	0f 85 00 00 00
	00		 jne	 ?terminate@@YAXXZ	; terminate

; 58   : 			_XSTD terminate();
; 59   : 		}

  0000a	c3		 ret	 0
??1thread@std@@QAE@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??4thread@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??4thread@std@@QAEAAV01@$$QAV01@@Z PROC			; std::thread::operator=, COMDAT
; _this$ = ecx

; 68   : 		{	// move from _Other

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b d1		 mov	 edx, ecx

; 71   : 
; 72   : private:
; 73   : 	thread(const thread&);	// not defined
; 74   : 	thread& operator=(const thread&);	// not defined
; 75   : public:
; 76   : 	void swap(thread& _Other) _NOEXCEPT
; 77   : 		{	// swap with _Other
; 78   : 		_STD swap(_Thr, _Other._Thr);
; 79   : 		}
; 80   : 
; 81   : 	bool joinable() const _NOEXCEPT
; 82   : 		{	// return true if this thread can be joined
; 83   : 		return (!_Thr_is_null(_Thr));

  00005	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0

; 84   : 		}
; 85   : 
; 86   : 	void join();
; 87   : 
; 88   : 	void detach()
; 89   : 		{	// detach thread
; 90   : 		if (!joinable())
; 91   : 			_Throw_Cpp_error(_INVALID_ARGUMENT);
; 92   : 		_Thrd_detachX(_Thr);
; 93   : 		_Thr_set_null(_Thr);
; 94   : 		}
; 95   : 
; 96   : 	id get_id() const _NOEXCEPT;
; 97   : 
; 98   : 	static unsigned int hardware_concurrency() _NOEXCEPT
; 99   : 		{	// return number of hardware thread contexts
; 100  : 		return (::Concurrency::details::_GetConcurrency());
; 101  : 		}
; 102  : 
; 103  : 	native_handle_type native_handle()
; 104  : 		{	// return Win32 HANDLE as void *
; 105  : 		return (_Thr._Hnd);
; 106  : 		}
; 107  : 
; 108  : private:
; 109  : 	thread& _Move_thread(thread& _Other)
; 110  : 		{	// move from _Other
; 111  : 		if (joinable())

  00009	75 1a		 jne	 SHORT $LN10@operator

; 113  : 		_Thr = _Other._Thr;

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Other$[ebp]
  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00010	89 02		 mov	 DWORD PTR [edx], eax
  00012	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 114  : 		_Thr_set_null(_Other._Thr);

  00018	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 69   : 		return (_Move_thread(_Other));

  0001f	8b c2		 mov	 eax, edx

; 70   : 		}

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
$LN10@operator:

; 112  : 			_XSTD terminate();

  00025	e8 00 00 00 00	 call	 ?terminate@@YAXXZ	; terminate
$LN12@operator:
$LN9@operator:
  0002a	cc		 int	 3
??4thread@std@@QAEAAV01@$$QAV01@@Z ENDP			; std::thread::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ?joinable@thread@std@@QBE_NXZ
_TEXT	SEGMENT
?joinable@thread@std@@QBE_NXZ PROC			; std::thread::joinable, COMDAT
; _this$ = ecx

; 83   : 		return (!_Thr_is_null(_Thr));

  00000	33 c0		 xor	 eax, eax
  00002	39 41 04	 cmp	 DWORD PTR [ecx+4], eax
  00005	0f 95 c0	 setne	 al

; 84   : 		}

  00008	c3		 ret	 0
?joinable@thread@std@@QBE_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ?_Move_thread@thread@std@@AAEAAV12@AAV12@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
?_Move_thread@thread@std@@AAEAAV12@AAV12@@Z PROC	; std::thread::_Move_thread, COMDAT
; _this$ = ecx

; 110  : 		{	// move from _Other

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b d1		 mov	 edx, ecx

; 83   : 		return (!_Thr_is_null(_Thr));

  00005	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0

; 111  : 		if (joinable())

  00009	75 1a		 jne	 SHORT $LN7@Move_threa

; 113  : 		_Thr = _Other._Thr;

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Other$[ebp]
  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00010	89 02		 mov	 DWORD PTR [edx], eax
  00012	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 114  : 		_Thr_set_null(_Other._Thr);

  00018	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 115  : 		return (*this);

  0001f	8b c2		 mov	 eax, edx

; 116  : 		}

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
$LN7@Move_threa:

; 112  : 			_XSTD terminate();

  00025	e8 00 00 00 00	 call	 ?terminate@@YAXXZ	; terminate
$LN9@Move_threa:
$LN6@Move_threa:
  0002a	cc		 int	 3
?_Move_thread@thread@std@@AAEAAV12@AAV12@@Z ENDP	; std::thread::_Move_thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp
;	COMDAT ??__Ethread@ServerThread@@YAXXZ
text$yc	SEGMENT
??__Ethread@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic initializer for 'thread'', COMDAT

; 5    : std::thread ServerThread::thread;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fthread@ServerThread@@YAXXZ ; ServerThread::`dynamic atexit destructor for 'thread''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Ethread@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic initializer for 'thread''
text$yc	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thread
;	COMDAT ??__Fthread@ServerThread@@YAXXZ
text$yd	SEGMENT
??__Fthread@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic atexit destructor for 'thread'', COMDAT

; 83   : 		return (!_Thr_is_null(_Thr));

  00000	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?thread@ServerThread@@3V0std@@A+4, 0

; 57   : 		if (joinable())

  00007	0f 85 00 00 00
	00		 jne	 ?terminate@@YAXXZ	; terminate
  0000d	c3		 ret	 0
??__Fthread@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic atexit destructor for 'thread''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp
;	COMDAT ??__EtaskList@ServerThread@@YAXXZ
text$yc	SEGMENT
??__EtaskList@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic initializer for 'taskList'', COMDAT
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp

; 7    : {

  00000	68 02 10 00 00	 push	 4098			; 00001002H
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp

; 6    : VirtualList<Tasks::Task, 256, 4098> ServerThread::taskList;

  0000a	68 00 00 00 00	 push	 OFFSET ??__FtaskList@ServerThread@@YAXXZ ; ServerThread::`dynamic atexit destructor for 'taskList''
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp

; 7    : {

  0000f	a3 04 04 00 00	 mov	 DWORD PTR ?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A+1028, eax
  00014	c7 05 08 04 00
	00 02 10 00 00	 mov	 DWORD PTR ?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A+1032, 4098 ; 00001002H
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp

; 6    : VirtualList<Tasks::Task, 256, 4098> ServerThread::taskList;

  0001e	e8 00 00 00 00	 call	 _atexit
  00023	83 c4 08	 add	 esp, 8
  00026	c3		 ret	 0
??__EtaskList@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic initializer for 'taskList''
text$yc	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp
;	COMDAT ??__FtaskList@ServerThread@@YAXXZ
text$yd	SEGMENT
??__FtaskList@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic atexit destructor for 'taskList'', COMDAT

; 13   : 	delete[] heap;

  00000	ff 35 04 04 00
	00		 push	 DWORD PTR ?taskList@ServerThread@@3V?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@A+1028
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	c3		 ret	 0
??__FtaskList@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic atexit destructor for 'taskList''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp
;	COMDAT ??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ
_TEXT	SEGMENT
??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ PROC ; VirtualList<Tasks::Task,256,4098>::~VirtualList<Tasks::Task,256,4098>, COMDAT
; _this$ = ecx

; 13   : 	delete[] heap;

  00000	ff b1 04 04 00
	00		 push	 DWORD PTR [ecx+1028]
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx
  0000c	c3		 ret	 0
??1?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ ENDP ; VirtualList<Tasks::Task,256,4098>::~VirtualList<Tasks::Task,256,4098>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp
;	COMDAT ??__Eworld@ServerThread@@YAXXZ
text$yc	SEGMENT
??__Eworld@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic initializer for 'world'', COMDAT

; 10   : World ServerThread::world;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?world@ServerThread@@3VWorld@@A ; ServerThread::world
  00005	e8 00 00 00 00	 call	 ??0World@@QAE@XZ	; World::World
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fworld@ServerThread@@YAXXZ ; ServerThread::`dynamic atexit destructor for 'world''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eworld@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic initializer for 'world''
text$yc	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fworld@ServerThread@@YAXXZ
text$yd	SEGMENT
??__Fworld@ServerThread@@YAXXZ PROC			; ServerThread::`dynamic atexit destructor for 'world'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?world@ServerThread@@3VWorld@@A ; ServerThread::world
  00005	e9 00 00 00 00	 jmp	 ??1World@@QAE@XZ	; World::~World
??__Fworld@ServerThread@@YAXXZ ENDP			; ServerThread::`dynamic atexit destructor for 'world''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\serverthread.cpp
;	COMDAT ?loop@ServerThread@@YAXXZ
_TEXT	SEGMENT
?loop@ServerThread@@YAXXZ PROC				; ServerThread::loop, COMDAT

; 14   : 	
; 15   : }

  00000	c3		 ret	 0
?loop@ServerThread@@YAXXZ ENDP				; ServerThread::loop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\list.h
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp
; File c:\users\glenn\documents\github\wind\project\wind\wind\list.h
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp
; File c:\users\glenn\documents\github\wind\project\wind\wind\list.h
;	COMDAT ??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ
_TEXT	SEGMENT
??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ PROC ; VirtualList<Tasks::Task,256,4098>::VirtualList<Tasks::Task,256,4098>, COMDAT
; _this$ = ecx

; 47   : 	{

  00000	56		 push	 esi
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp

; 7    : {

  00001	68 02 10 00 00	 push	 4098			; 00001002H
; File c:\users\glenn\documents\github\wind\project\wind\wind\list.h

; 47   : 	{

  00006	8b f1		 mov	 esi, ecx
; File c:\users\glenn\documents\github\wind\project\wind\wind\memutil.cpp

; 7    : {

  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4
  00010	89 86 04 04 00
	00		 mov	 DWORD PTR [esi+1028], eax
  00016	c7 86 08 04 00
	00 02 10 00 00	 mov	 DWORD PTR [esi+1032], 4098 ; 00001002H
; File c:\users\glenn\documents\github\wind\project\wind\wind\list.h

; 49   : 	}

  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	c3		 ret	 0
??0?$VirtualList@VTask@Tasks@@$0BAA@$0BAAC@@@QAE@XZ ENDP ; VirtualList<Tasks::Task,256,4098>::VirtualList<Tasks::Task,256,4098>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\glenn\documents\github\wind\project\wind\wind\list.h
;	COMDAT ??0?$List@PAVTask@Tasks@@$0BAA@@@QAE@XZ
_TEXT	SEGMENT
??0?$List@PAVTask@Tasks@@$0BAA@@@QAE@XZ PROC		; List<Tasks::Task *,256>::List<Tasks::Task *,256>, COMDAT
; _this$ = ecx

; 13   : 	{
; 14   : 
; 15   : 	}

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0?$List@PAVTask@Tasks@@$0BAA@@@QAE@XZ ENDP		; List<Tasks::Task *,256>::List<Tasks::Task *,256>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z
_TEXT	SEGMENT
??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z PROC ; std::forward<std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >, COMDAT
; __Arg$ = ecx

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

  00000	8b c1		 mov	 eax, ecx

; 1777 : 	}

  00002	c3		 ret	 0
??$forward@V?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$tuple@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z ENDP ; std::forward<std::tuple<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@P6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z
_TEXT	SEGMENT
??$forward@P6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z PROC	; std::forward<void (__cdecl*)(void)>, COMDAT
; __Arg$ = ecx

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

  00000	8b c1		 mov	 eax, ecx

; 1777 : 	}

  00002	c3		 ret	 0
??$forward@P6AXXZ@std@@YA$$QAP6AXXZAAP6AXXZ@Z ENDP	; std::forward<void (__cdecl*)(void)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
;	COMDAT ?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UAEIXZ
_TEXT	SEGMENT
?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UAEIXZ PROC ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Go, COMDAT
; _this$ = ecx

; 186  : 		{	// run the thread function object

  00000	56		 push	 esi
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00001	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 194  : 		_Ln->_Release();

  00004	e8 00 00 00 00	 call	 ?_Release@_Pad@std@@QAEXXZ ; std::_Pad::_Release
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00009	ff d6		 call	 esi
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 187  : 		return (_Run(this));

  0000b	33 c0		 xor	 eax, eax
  0000d	5e		 pop	 esi

; 188  : 		}

  0000e	c3		 ret	 0
?_Go@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@UAEIXZ ENDP ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Go
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread
;	COMDAT ?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPAV12@@Z
_TEXT	SEGMENT
?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPAV12@@Z PROC ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Run, COMDAT
; __Ln$ = ecx

; 192  : 		{	// make local copy of function object and call it

  00000	56		 push	 esi
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00001	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 194  : 		_Ln->_Release();

  00004	e8 00 00 00 00	 call	 ?_Release@_Pad@std@@QAEXXZ ; std::_Pad::_Release
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00009	ff d6		 call	 esi
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\thr\xthread

; 196  : 		return (0);

  0000b	33 c0		 xor	 eax, eax
  0000d	5e		 pop	 esi

; 197  : 		}

  0000e	c3		 ret	 0
?_Run@?$_LaunchPad@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@CAIPAV12@@Z ENDP ; std::_LaunchPad<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >::_Run
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
;	COMDAT ??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAE@$$QAV01@@Z PROC ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>, COMDAT
; _this$ = ecx

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	89 01		 mov	 DWORD PTR [ecx], eax
  0000a	8b c1		 mov	 eax, ecx
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAE@$$QAV01@@Z ENDP ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\functional
;	COMDAT ??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAEXXZ
_TEXT	SEGMENT
??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAEXXZ PROC ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::operator(), COMDAT
; _this$ = ecx

; 1152 : _VARIADIC_EXPAND_0X(_CLASS_BIND, , , , )

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff e0		 jmp	 eax
??R?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@QAEXXZ ENDP ; std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z
_TEXT	SEGMENT
??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z PROC ; std::forward<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >, COMDAT
; __Arg$ = ecx

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

  00000	8b c1		 mov	 eax, ecx

; 1777 : 	}

  00002	c3		 ret	 0
??$forward@V?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@@std@@YA$$QAV?$_Bind@$00XQ6AXXZU_Nil@std@@U12@U12@U12@U12@U12@U12@@0@AAV10@@Z ENDP ; std::forward<std::_Bind<1,void,void (__cdecl*const)(void),std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >
_TEXT	ENDS
END
